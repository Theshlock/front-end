{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst useUserMetadata = () => {\n  _s();\n\n  const {\n    user,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userMetadata, setUserMetadata] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      const domain = 'dev-bwkc1q2n.us.auth0.com';\n\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: `https://${domain}/api/v2/`,\n          scope: 'read:current_user'\n        });\n        setAccessToken(accessToken);\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const {\n          user_metadata\n        } = await metadataResponse.json();\n        setUserMetadata(user_metadata);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n\n    getUserMetadata();\n  }, []);\n  return {\n    userMetadata,\n    accessToken\n  };\n};\n\n_s(useUserMetadata, \"jWfRYKPUog6woap/Io/cIvJ0MAA=\", false, function () {\n  return [useAuth0];\n});\n\nexport default useUserMetadata;","map":{"version":3,"sources":["/home/sam/Documents/flipic/front-end/src/hooks/useUserMetadata.js"],"names":["useEffect","useState","useAuth0","useUserMetadata","user","getAccessTokenSilently","userMetadata","setUserMetadata","accessToken","setAccessToken","getUserMetadata","domain","audience","scope","userDetailsByIdUrl","sub","metadataResponse","fetch","headers","Authorization","user_metadata","json","e","console","log","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmCH,QAAQ,EAAjD;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,eAAe,GAAG,YAAY;AACnC,YAAMC,MAAM,GAAG,2BAAf;;AAEA,UAAI;AACH,cAAMH,WAAW,GAAG,MAAMH,sBAAsB,CAAC;AAChDO,UAAAA,QAAQ,EAAG,WAAUD,MAAO,UADoB;AAEhDE,UAAAA,KAAK,EAAE;AAFyC,SAAD,CAAhD;AAIAJ,QAAAA,cAAc,CAACD,WAAD,CAAd;AAEA,cAAMM,kBAAkB,GAAI,WAAUH,MAAO,iBAAgBP,IAAI,CAACW,GAAI,EAAtE;AAEA,cAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACH,kBAAD,EAAqB;AACxDI,UAAAA,OAAO,EAAE;AACRC,YAAAA,aAAa,EAAG,UAASX,WAAY;AAD7B;AAD+C,SAArB,CAApC;AAMA,cAAM;AAAEY,UAAAA;AAAF,YAAoB,MAAMJ,gBAAgB,CAACK,IAAjB,EAAhC;AAEAd,QAAAA,eAAe,CAACa,aAAD,CAAf;AACA,OAlBD,CAkBE,OAAOE,CAAP,EAAU;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACA;AACD,KAxBD;;AA0BAf,IAAAA,eAAe;AACf,GA5BQ,EA4BN,EA5BM,CAAT;AA6BA,SAAO;AAAEJ,IAAAA,YAAF;AAAgBE,IAAAA;AAAhB,GAAP;AACA,CAnCD;;GAAML,e;UACoCD,Q;;;AAoC1C,eAAeC,eAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst useUserMetadata = () => {\n\tconst { user, getAccessTokenSilently } = useAuth0();\n\tconst [userMetadata, setUserMetadata] = useState(null);\n\tconst [accessToken, setAccessToken] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst getUserMetadata = async () => {\n\t\t\tconst domain = 'dev-bwkc1q2n.us.auth0.com';\n\n\t\t\ttry {\n\t\t\t\tconst accessToken = await getAccessTokenSilently({\n\t\t\t\t\taudience: `https://${domain}/api/v2/`,\n\t\t\t\t\tscope: 'read:current_user',\n\t\t\t\t});\n\t\t\t\tsetAccessToken(accessToken);\n\n\t\t\t\tconst userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n\n\t\t\t\tconst metadataResponse = await fetch(userDetailsByIdUrl, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tconst { user_metadata } = await metadataResponse.json();\n\n\t\t\t\tsetUserMetadata(user_metadata);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.message);\n\t\t\t}\n\t\t};\n\n\t\tgetUserMetadata();\n\t}, []);\n\treturn { userMetadata, accessToken };\n};\n\nexport default useUserMetadata;\n"]},"metadata":{},"sourceType":"module"}