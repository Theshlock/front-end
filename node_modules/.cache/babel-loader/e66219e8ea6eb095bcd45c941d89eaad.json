{"ast":null,"code":"var _jsxFileName = \"/home/sam/Documents/flipic/front-end/src/components/Deck/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSprings } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport theme from '../Theme/theme';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: 0,\n  delay: i * 100,\n  bgColor: theme.color.background.secondary,\n  lWidth: '50%',\n  rWidth: '50%',\n  lShow: 'initial',\n  rShow: 'initial'\n});\n\nconst from = i => ({\n  x: 0,\n  rot: 0,\n  scale: 1.5,\n  y: -1000,\n  bgColor: theme.color.background.secondary,\n  lWidth: '50%',\n  rWidth: '50%',\n  lShow: 'initial',\n  rShow: 'initial'\n});\n\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nconst Deck = ({\n  num_choices,\n  frontPair,\n  backPair,\n  quizId,\n  updateProgress,\n  setFront,\n  setBack\n}) => {\n  _s();\n\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are picked\n\n  const [frontIndex, updateFrontIndex] = useState(num_choices - 1);\n  const [backIndex, updateBackIndex] = useState(num_choices - 2);\n  const [props, set] = useSprings(num_choices, i => ({ ...to(i),\n    from: from(i)\n  })); // console.log(frontPair.matchup[0].name);\n  // console.log(frontPair.matchup[1].name);\n  // console.log(frontIndex);\n  // console.log(backIndex);\n\n  const sendChoice = payload => {\n    fetch('http://ec2-54-252-205-131.ap-southeast-2.compute.amazonaws.com/api/quiz-all', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(payload => {\n      console.log('Success:', payload);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }; // console.log(matchUpEndpoint);\n\n\n  const getMatchUp = () => {\n    fetch('http://ec2-54-252-205-131.ap-southeast-2.compute.amazonaws.com//api/quiz-matchup/' + quizId).then(response => response.json()).then(data => {\n      console.log(data);\n      setBack(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }; // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n\n\n  const bind = useDrag(({\n    args: [index],\n    down,\n    movement: [mx],\n    direction: [xDir],\n    velocity\n  }) => {\n    const trigger = velocity > 0.2;\n    let dir;\n\n    if (xDir > 0) {\n      dir = 1;\n    } else if (xDir < 0) {\n      dir = -1;\n    } else {\n      dir = 0;\n    }\n\n    if (!down && trigger) gone.add(index); // Changing spring-data for the current spring\n\n    set(i => {\n      if (index !== i) return;\n      const isGone = gone.has(index);\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n\n      const scale = down ? 1.1 : 1; // Active cards lift up a bit\n\n      let rot; // How much the card tilts, flicking it harder makes it rotate faster\n\n      let bgColor; // change card background color\n\n      let lWidth; // change the width of the left half card\n\n      let rWidth; // change the width of the right half card\n\n      let lShow; // change the display of the left half card\n\n      let rShow; // change the display of the right half card\n\n      let payload; // animate swiping based on the gesture\n\n      if (x > 0) {\n        bgColor = theme.color.primary;\n        rot = mx / 100 + (isGone ? dir * 10 * velocity : 0);\n        lWidth = '0%';\n        rWidth = '100%';\n        lShow = 'none';\n        rShow = 'initial';\n        payload = {\n          quizId: quizId,\n          itemId: frontPair.matchup[1].id\n        }; // if (!down && isGone) sendChoice(payload);\n      } else if (x < 0) {\n        bgColor = theme.color.accent;\n        rot = mx / 100 + (isGone ? dir * 10 * velocity : 0);\n        lWidth = '100%';\n        rWidth = '0%';\n        lShow = 'initial';\n        rShow = 'none';\n        payload = {\n          quizId: quizId,\n          itemId: frontPair.matchup[0].id\n        }; // if (!down && isGone) sendChoice(payload);\n      } else {\n        bgColor = theme.color.background.secondary;\n        rot = 0;\n        lWidth = '50%';\n        rWidth = '50%';\n        lShow = 'initial';\n        rShow = 'initial';\n      }\n\n      updateProgress(gone.size / num_choices);\n\n      if (!down && isGone) {\n        updateFrontIndex(frontIndex - 1);\n        updateBackIndex(backIndex - 1);\n        setFront(backPair);\n        getMatchUp();\n      }\n\n      return {\n        x,\n        rot,\n        bgColor,\n        lWidth,\n        rWidth,\n        lShow,\n        rShow,\n        scale,\n        delay: undefined,\n        config: {\n          friction: 100,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n\n    if (!down && gone.size === num_choices) {// end of quiz\n    }\n  });\n  return props.map(({\n    x,\n    y,\n    rot,\n    scale,\n    bgColor,\n    lWidth,\n    rWidth,\n    lShow,\n    rShow\n  }, i) => /*#__PURE__*/_jsxDEV(Card, {\n    i: i,\n    x: x,\n    y: y,\n    bind: bind,\n    trans: trans,\n    rot: rot,\n    scale: scale,\n    bgColor: bgColor,\n    lWidth: lWidth,\n    rWidth: rWidth,\n    lShow: lShow,\n    rShow: rShow,\n    frontIndex: frontIndex,\n    backIndex: backIndex,\n    frontPair: frontPair,\n    backPair: backPair\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 3\n  }, this));\n};\n\n_s(Deck, \"4YJ3kArBc4qJ+OIAaeSzRLayuxU=\", false, function () {\n  return [useSprings, useDrag];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/home/sam/Documents/flipic/front-end/src/components/Deck/Deck.js"],"names":["React","useState","useSprings","useDrag","theme","Card","to","i","x","y","scale","rot","delay","bgColor","color","background","secondary","lWidth","rWidth","lShow","rShow","from","trans","r","s","Deck","num_choices","frontPair","backPair","quizId","updateProgress","setFront","setBack","gone","Set","frontIndex","updateFrontIndex","backIndex","updateBackIndex","props","set","sendChoice","payload","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","getMatchUp","data","bind","args","index","down","movement","mx","direction","xDir","velocity","trigger","dir","add","isGone","has","window","innerWidth","primary","itemId","matchup","id","accent","size","undefined","config","friction","tension","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSprings } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport theme from '../Theme/theme';\nimport Card from '../Card/Card';\n\nconst to = i => ({\n\tx: 0,\n\ty: i * -4,\n\tscale: 1,\n\trot: 0,\n\tdelay: i * 100,\n\tbgColor: theme.color.background.secondary,\n\tlWidth: '50%',\n\trWidth: '50%',\n\tlShow: 'initial',\n\trShow: 'initial',\n});\nconst from = i => ({\n\tx: 0,\n\trot: 0,\n\tscale: 1.5,\n\ty: -1000,\n\tbgColor: theme.color.background.secondary,\n\tlWidth: '50%',\n\trWidth: '50%',\n\tlShow: 'initial',\n\trShow: 'initial',\n});\n\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nconst Deck = ({ num_choices, frontPair, backPair, quizId, updateProgress, setFront, setBack }) => {\n\tconst [gone] = useState(() => new Set()); // The set flags all the cards that are picked\n\n\tconst [frontIndex, updateFrontIndex] = useState(num_choices - 1);\n\tconst [backIndex, updateBackIndex] = useState(num_choices - 2);\n\n\tconst [props, set] = useSprings(num_choices, i => ({\n\t\t...to(i),\n\t\tfrom: from(i),\n\t}));\n\n\t// console.log(frontPair.matchup[0].name);\n\t// console.log(frontPair.matchup[1].name);\n\t// console.log(frontIndex);\n\t// console.log(backIndex);\n\n\tconst sendChoice = payload => {\n\t\tfetch('http://ec2-54-252-205-131.ap-southeast-2.compute.amazonaws.com/api/quiz-all', {\n\n\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(payload => {\n\t\t\t\tconsole.log('Success:', payload);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t};\n\n\t// console.log(matchUpEndpoint);\n\n\tconst getMatchUp = () => {\n\t\tfetch('http://ec2-54-252-205-131.ap-southeast-2.compute.amazonaws.com//api/quiz-matchup/' + quizId)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetBack(data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t};\n\n\t// Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n\tconst bind = useDrag(({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {\n\t\tconst trigger = velocity > 0.2;\n\n\t\tlet dir;\n\t\tif (xDir > 0) {\n\t\t\tdir = 1;\n\t\t} else if (xDir < 0) {\n\t\t\tdir = -1;\n\t\t} else {\n\t\t\tdir = 0;\n\t\t}\n\n\t\tif (!down && trigger) gone.add(index);\n\n\t\t// Changing spring-data for the current spring\n\t\tset(i => {\n\t\t\tif (index !== i) return;\n\t\t\tconst isGone = gone.has(index);\n\t\t\tconst x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n\t\t\tconst scale = down ? 1.1 : 1; // Active cards lift up a bit\n\t\t\tlet rot; // How much the card tilts, flicking it harder makes it rotate faster\n\t\t\tlet bgColor; // change card background color\n\t\t\tlet lWidth; // change the width of the left half card\n\t\t\tlet rWidth; // change the width of the right half card\n\t\t\tlet lShow; // change the display of the left half card\n\t\t\tlet rShow; // change the display of the right half card\n\t\t\tlet payload;\n\n\t\t\t// animate swiping based on the gesture\n\t\t\tif (x > 0) {\n\t\t\t\tbgColor = theme.color.primary;\n\t\t\t\trot = mx / 100 + (isGone ? dir * 10 * velocity : 0);\n\t\t\t\tlWidth = '0%';\n\t\t\t\trWidth = '100%';\n\t\t\t\tlShow = 'none';\n\t\t\t\trShow = 'initial';\n\t\t\t\tpayload = {\n\t\t\t\t\tquizId: quizId,\n\t\t\t\t\titemId: frontPair.matchup[1].id,\n\t\t\t\t};\n\t\t\t\t// if (!down && isGone) sendChoice(payload);\n\t\t\t} else if (x < 0) {\n\t\t\t\tbgColor = theme.color.accent;\n\t\t\t\trot = mx / 100 + (isGone ? dir * 10 * velocity : 0);\n\t\t\t\tlWidth = '100%';\n\t\t\t\trWidth = '0%';\n\t\t\t\tlShow = 'initial';\n\t\t\t\trShow = 'none';\n\t\t\t\tpayload = {\n\t\t\t\t\tquizId: quizId,\n\t\t\t\t\titemId: frontPair.matchup[0].id,\n\t\t\t\t};\n\t\t\t\t// if (!down && isGone) sendChoice(payload);\n\t\t\t} else {\n\t\t\t\tbgColor = theme.color.background.secondary;\n\t\t\t\trot = 0;\n\t\t\t\tlWidth = '50%';\n\t\t\t\trWidth = '50%';\n\t\t\t\tlShow = 'initial';\n\t\t\t\trShow = 'initial';\n\t\t\t}\n\n\t\t\tupdateProgress(gone.size / num_choices);\n\t\t\tif (!down && isGone) {\n\t\t\t\tupdateFrontIndex(frontIndex - 1);\n\t\t\t\tupdateBackIndex(backIndex - 1);\n\t\t\t\tsetFront(backPair);\n\t\t\t\tgetMatchUp();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\trot,\n\t\t\t\tbgColor,\n\t\t\t\tlWidth,\n\t\t\t\trWidth,\n\t\t\t\tlShow,\n\t\t\t\trShow,\n\t\t\t\tscale,\n\t\t\t\tdelay: undefined,\n\t\t\t\tconfig: { friction: 100, tension: down ? 800 : isGone ? 200 : 500 },\n\t\t\t};\n\t\t});\n\n\t\tif (!down && gone.size === num_choices) {\n\t\t\t// end of quiz\n\t\t}\n\t});\n\n\treturn props.map(({ x, y, rot, scale, bgColor, lWidth, rWidth, lShow, rShow }, i) => (\n\t\t<Card\n\t\t\tkey={i}\n\t\t\ti={i}\n\t\t\tx={x}\n\t\t\ty={y}\n\t\t\tbind={bind}\n\t\t\ttrans={trans}\n\t\t\trot={rot}\n\t\t\tscale={scale}\n\t\t\tbgColor={bgColor}\n\t\t\tlWidth={lWidth}\n\t\t\trWidth={rWidth}\n\t\t\tlShow={lShow}\n\t\t\trShow={rShow}\n\t\t\tfrontIndex={frontIndex}\n\t\t\tbackIndex={backIndex}\n\t\t\tfrontPair={frontPair}\n\t\t\tbackPair={backPair}\n\t\t/>\n\t));\n};\n\nexport default Deck;\n"]},"metadata":{},"sourceType":"module"}